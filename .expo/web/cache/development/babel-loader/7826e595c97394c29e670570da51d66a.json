{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport color from \"../config/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LoginPage() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    UserName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    Password = _useState4[0],\n    setPassword = _useState4[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.HeaddingWrapper,\n      children: _jsx(Text, {\n        style: styles.Heading,\n        children: \"Log In\"\n      })\n    }), _jsx(View, {\n      style: styles.textWrapper,\n      children: _jsx(Text, {\n        style: styles.InputLabel,\n        children: \"User Name\"\n      })\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: UserName,\n      onChangeText: setUserName\n    }), _jsx(View, {\n      style: styles.textWrapper,\n      children: _jsx(Text, {\n        style: styles.InputLabel,\n        children: \"Password\"\n      })\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: Password,\n      onChangeText: setPassword\n    }), _jsx(View, {\n      style: styles.textWrapper,\n      children: _jsx(Text, {\n        style: styles.InputLabel,\n        children: \"Forgot Password ?\"\n      })\n    }), _jsxs(View, {\n      style: [styles.textWrapper, styles.signUpText],\n      children: [_jsx(Text, {\n        style: styles.InputLabel,\n        children: \"Don't Have Acoount \"\n      }), _jsx(TouchableHighlight, {\n        children: _jsx(Text, {\n          style: [styles.InputLabel, styles.linkText],\n          children: \"SIGN UP\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.Btn,\n      children: _jsx(Text, {\n        style: styles.BtnText,\n        children: \"Log In\"\n      })\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        naviagtion.naviagte('Entry');\n      },\n      children: \"Back\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 40,\n    marginVertical: 12\n  },\n  HeaddingWrapper: {\n    marginBottom: 40,\n    display: 'flex'\n  },\n  Heading: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: color.blackColor,\n    marginBottom: 20\n  },\n  Btn: {\n    backgroundColor: color.blueColor,\n    paddingHorizontal: 12,\n    paddingVertical: 12,\n    borderRadius: 4,\n    width: '75%',\n    marginTop: 20\n  },\n  BtnText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: color.whiteColor,\n    width: '100%',\n    textAlign: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: color.blackColor,\n    padding: 10,\n    height: 40,\n    width: '75%',\n    borderRadius: 4,\n    marginBottom: 20\n  },\n  textWrapper: {\n    width: \"75%\",\n    marginBottom: 10\n  },\n  InputLabel: {\n    fontSize: 16\n  },\n  signUpText: {\n    marginBottom: 100,\n    flexDirection: 'row'\n  },\n  linkText: {\n    color: color.blueColor\n  }\n});\nexport default LoginPage;","map":{"version":3,"names":["React","color","LoginPage","useState","UserName","setUserName","Password","setPassword","styles","container","HeaddingWrapper","Heading","textWrapper","InputLabel","input","signUpText","linkText","Btn","BtnText","naviagtion","naviagte","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","paddingTop","marginVertical","marginBottom","display","fontSize","fontWeight","blackColor","blueColor","paddingHorizontal","paddingVertical","borderRadius","width","marginTop","whiteColor","textAlign","borderWidth","borderColor","padding","height","flexDirection"],"sources":["/workspace/barber/app/screens/LoginPage.js"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Text, TouchableOpacity, TouchableHighlight, TextInput, Button } from 'react-native';\nimport color from '../config/colors';\n\nfunction LoginPage() {\n\n    const [UserName, setUserName] = useState(\"\");\n    const [Password, setPassword] = useState(\"\");\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.HeaddingWrapper}>\n                <Text style={styles.Heading}>Log In</Text>\n            </View>\n            <View style={styles.textWrapper}>\n                <Text style={styles.InputLabel}>User Name</Text>\n            </View>\n            <TextInput style={styles.input} value={UserName} onChangeText={setUserName} />\n            <View style={styles.textWrapper}>\n                <Text style={styles.InputLabel}>Password</Text>\n            </View>\n            <TextInput style={styles.input} value={Password} onChangeText={setPassword} />\n            <View style={styles.textWrapper}>\n                <Text style={styles.InputLabel}>Forgot Password ?</Text>\n            </View>\n            <View style={[styles.textWrapper, styles.signUpText]}>\n                <Text style={styles.InputLabel}>Don't Have Acoount </Text>\n                <TouchableHighlight><Text style={[styles.InputLabel, styles.linkText]} >SIGN UP</Text></TouchableHighlight>\n            </View>\n            <TouchableOpacity style={styles.Btn}>\n                <Text style={styles.BtnText}>Log In</Text>\n            </TouchableOpacity>\n            <Button\n                onPress={() =>{\n                    naviagtion.naviagte('Entry')\n                }}> \n                Back\n            </Button>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingTop: 40,\n        marginVertical: 12,\n    },\n    HeaddingWrapper: {\n        marginBottom: 40,\n        display: 'flex',\n    },\n    Heading: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: color.blackColor,\n        marginBottom: 20,\n    },\n    Btn: {\n        backgroundColor: color.blueColor,\n        paddingHorizontal: 12,\n        paddingVertical: 12,\n        borderRadius: 4,        \n        width: '75%',\n        marginTop: 20,\n    },\n    BtnText: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        color: color.whiteColor,\n        width: '100%',\n        textAlign: 'center',\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: color.blackColor,\n        padding: 10,\n        height: 40,\n        width: '75%',\n        borderRadius: 4,\n        marginBottom: 20\n    },\n    textWrapper: {\n        width: \"75%\",\n        marginBottom: 10\n    },\n    InputLabel: {\n        fontSize: 16,\n    },\n    signUpText: {\n        marginBottom: 100,\n        flexDirection: 'row',\n    },\n    linkText: {\n        color: color.blueColor,\n    }\n})\n\nexport default LoginPage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1B,OAAOC,KAAK;AAAyB;AAAA;AAErC,SAASC,SAAS,GAAG;EAEjB,gBAAgCC,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCC,QAAQ;IAAEC,WAAW;EAC5B,iBAAgCF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCG,QAAQ;IAAEC,WAAW;EAE5B,OACI,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,WAC1B,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,eAAgB;MAAA,UAChC,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,OAAQ;QAAA;MAAA;IAAc,EACvC,EACP,KAAC,IAAI;MAAC,KAAK,EAAEH,MAAM,CAACI,WAAY;MAAA,UAC5B,KAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACK,UAAW;QAAA;MAAA;IAAiB,EAC7C,EACP,KAAC,SAAS;MAAC,KAAK,EAAEL,MAAM,CAACM,KAAM;MAAC,KAAK,EAAEV,QAAS;MAAC,YAAY,EAAEC;IAAY,EAAG,EAC9E,KAAC,IAAI;MAAC,KAAK,EAAEG,MAAM,CAACI,WAAY;MAAA,UAC5B,KAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACK,UAAW;QAAA;MAAA;IAAgB,EAC5C,EACP,KAAC,SAAS;MAAC,KAAK,EAAEL,MAAM,CAACM,KAAM;MAAC,KAAK,EAAER,QAAS;MAAC,YAAY,EAAEC;IAAY,EAAG,EAC9E,KAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACI,WAAY;MAAA,UAC5B,KAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACK,UAAW;QAAA;MAAA;IAAyB,EACrD,EACP,MAAC,IAAI;MAAC,KAAK,EAAE,CAACL,MAAM,CAACI,WAAW,EAAEJ,MAAM,CAACO,UAAU,CAAE;MAAA,WACjD,KAAC,IAAI;QAAC,KAAK,EAAEP,MAAM,CAACK,UAAW;QAAA;MAAA,EAA2B,EAC1D,KAAC,kBAAkB;QAAA,UAAC,KAAC,IAAI;UAAC,KAAK,EAAE,CAACL,MAAM,CAACK,UAAU,EAAEL,MAAM,CAACQ,QAAQ,CAAE;UAAA;QAAA;MAAgB,EAAqB;IAAA,EACxG,EACP,KAAC,gBAAgB;MAAC,KAAK,EAAER,MAAM,CAACS,GAAI;MAAA,UAChC,KAAC,IAAI;QAAC,KAAK,EAAET,MAAM,CAACU,OAAQ;QAAA;MAAA;IAAc,EAC3B,EACnB,KAAC,MAAM;MACH,OAAO,EAAE,mBAAK;QACVC,UAAU,CAACC,QAAQ,CAAC,OAAO,CAAC;MAChC,CAAE;MAAA;IAAA,EAEG;EAAA,EACN;AAEf;AAEA,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAM,CAAC;EAC7Bb,SAAS,EAAE;IACPc,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,EAAE;IACdC,cAAc,EAAE;EACpB,CAAC;EACDlB,eAAe,EAAE;IACbmB,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACb,CAAC;EACDnB,OAAO,EAAE;IACLoB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClB/B,KAAK,EAAEA,KAAK,CAACgC,UAAU;IACvBJ,YAAY,EAAE;EAClB,CAAC;EACDZ,GAAG,EAAE;IACDO,eAAe,EAAEvB,KAAK,CAACiC,SAAS;IAChCC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,CAAC;IACfC,KAAK,EAAE,KAAK;IACZC,SAAS,EAAE;EACf,CAAC;EACDrB,OAAO,EAAE;IACLa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClB/B,KAAK,EAAEA,KAAK,CAACuC,UAAU;IACvBF,KAAK,EAAE,MAAM;IACbG,SAAS,EAAE;EACf,CAAC;EACD3B,KAAK,EAAE;IACH4B,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE1C,KAAK,CAACgC,UAAU;IAC7BW,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVP,KAAK,EAAE,KAAK;IACZD,YAAY,EAAE,CAAC;IACfR,YAAY,EAAE;EAClB,CAAC;EACDjB,WAAW,EAAE;IACT0B,KAAK,EAAE,KAAK;IACZT,YAAY,EAAE;EAClB,CAAC;EACDhB,UAAU,EAAE;IACRkB,QAAQ,EAAE;EACd,CAAC;EACDhB,UAAU,EAAE;IACRc,YAAY,EAAE,GAAG;IACjBiB,aAAa,EAAE;EACnB,CAAC;EACD9B,QAAQ,EAAE;IACNf,KAAK,EAAEA,KAAK,CAACiC;EACjB;AACJ,CAAC,CAAC;AAEF,eAAehC,SAAS"},"metadata":{},"sourceType":"module"}